{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable no-shadow */ function $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.board = initialState || this.createEmptyBoard();\n        this.score = 0;\n        this.history = [];\n        this.scoreHistory = [];\n        this.undoCount = 2;\n        this.shuffleCount = 1;\n        this.removeCount = 0;\n        this.has256 = false;\n        this.has512 = false;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(i) {\n                    var row = _this.board[i].filter(function(val) {\n                        return val !== 0;\n                    });\n                    for(var j = 0; j < row.length - 1; j++)if (row[j] === row[j + 1]) {\n                        row[j] *= 2;\n                        _this.score += row[j];\n                        row[j + 1] = 0;\n                        _this.checkWin(row[j]);\n                        _this.checkUnlocks(row[j]);\n                    }\n                    var newRow = row.filter(function(val) {\n                        return val !== 0;\n                    });\n                    while(newRow.length < _this.size)newRow.push(0);\n                    if (_this.board[i].toString() !== newRow.toString()) moved = true;\n                    _this.board[i] = newRow;\n                };\n                if (this.status !== \"playing\") return;\n                this.savePreviousState();\n                var moved = false;\n                for(var i = 0; i < this.size; i++)_loop(i);\n                if (moved) {\n                    this.addRandomTile();\n                    if (this.isGameOver()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.board = this.reverseRows(this.board);\n                this.moveLeft();\n                if (this.status === \"win\") return;\n                this.board = this.reverseRows(this.board);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.board = this.transpose(this.board);\n                this.moveLeft();\n                if (this.status === \"win\") return;\n                this.board = this.transpose(this.board);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.board = this.transpose(this.board);\n                this.board = this.reverseRows(this.board);\n                this.moveLeft();\n                if (this.status === \"win\") return;\n                this.board = this.reverseRows(this.board);\n                this.board = this.transpose(this.board);\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status !== \"playing\") {\n                    this.board = this.createEmptyBoard();\n                    this.addRandomTile();\n                    this.addRandomTile();\n                    this.score = 0;\n                    this.status = \"playing\";\n                    this.undoCount = 2;\n                    this.shuffleCount = 1;\n                    this.removeCount = 0;\n                    this.has256 = false;\n                    this.has512 = false;\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = \"idle\";\n                this.start();\n            }\n        },\n        {\n            key: \"savePreviousState\",\n            value: function savePreviousState() {\n                this.history.push(this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                }));\n                this.scoreHistory.push(this.score);\n                if (this.history.length > 2) {\n                    this.history.shift();\n                    this.scoreHistory.shift();\n                }\n            }\n        },\n        {\n            key: \"undo\",\n            value: function undo() {\n                if (this.undoCount > 0 && this.history.length > 0) {\n                    this.board = this.history.pop();\n                    this.score = this.scoreHistory.pop();\n                    this.undoCount--;\n                }\n            }\n        },\n        {\n            key: \"shuffle\",\n            value: function shuffle() {\n                var _this = this;\n                if (this.shuffleCount === 0) return;\n                var flat = this.board.flat().filter(function(v) {\n                    return v !== 0;\n                });\n                for(var i = flat.length - 1; i > 0; i--){\n                    var j = Math.floor(Math.random() * (i + 1));\n                    var ref;\n                    ref = [\n                        flat[j],\n                        flat[i]\n                    ], flat[i] = ref[0], flat[j] = ref[1], ref;\n                }\n                var newBoard = this.createEmptyBoard();\n                flat.forEach(function(val, i) {\n                    var row = Math.floor(i / _this.size);\n                    var col = i % _this.size;\n                    newBoard[row][col] = val;\n                });\n                this.board = newBoard;\n                this.shuffleCount--;\n            }\n        },\n        {\n            key: \"remove\",\n            value: function remove() {\n                if (this.removeCount === 0) return;\n                var filled = [];\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] !== 0) filled.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (filled.length === 0) return;\n                var _filled_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(filled[Math.floor(Math.random() * filled.length)], 2), i1 = _filled_Math_floor[0], j1 = _filled_Math_floor[1];\n                this.board[i1][j1] = 0;\n                this.removeCount--;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin(value) {\n                if (value === 2048) this.status = \"win\";\n            }\n        },\n        {\n            key: \"checkUnlocks\",\n            value: function checkUnlocks(value) {\n                if (value === 256 && !this.has256) {\n                    this.shuffleCount++;\n                    this.has256 = true;\n                }\n                if (value === 512 && this.removeCount < 2) {\n                    this.removeCount++;\n                    this.has512 = true;\n                }\n            }\n        },\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var empty = [];\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] === 0) empty.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (empty.length > 0) {\n                    var _empty_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(empty[Math.floor(Math.random() * empty.length)], 2), i1 = _empty_Math_floor[0], j1 = _empty_Math_floor[1];\n                    this.board[i1][j1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size; j++){\n                    if (this.board[i][j] === 0) return false;\n                    if (j < this.size - 1 && this.board[i][j] === this.board[i][j + 1]) return false;\n                    if (i < this.size - 1 && this.board[i][j] === this.board[i + 1][j]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"reverseRows\",\n            value: function reverseRows(matrix) {\n                return matrix.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                });\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(matrix) {\n                return matrix[0].map(function(_, colIndex) {\n                    return matrix.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$boardElement = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$statusElement = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$toolsContainer = document.querySelector(\".game-tools\");\nvar $197cd56b15c33885$var$undoButton = document.querySelector(\".undo-button\");\nvar $197cd56b15c33885$var$shuffleButton = document.querySelector(\".shuffle-button\");\nvar $197cd56b15c33885$var$removeButton = document.querySelector(\".remove-button\");\nfunction $197cd56b15c33885$var$updateToolButtons() {\n    var updateSlots = function(button, count, max) {\n        var slots = Array.from(button.querySelectorAll(\".use-slot\"));\n        slots.forEach(function(slot, index) {\n            slot.classList.toggle(\"used\", index < count);\n        });\n        button.disabled = count === 0;\n    };\n    updateSlots($197cd56b15c33885$var$undoButton, $197cd56b15c33885$var$game.undoCount, 2);\n    updateSlots($197cd56b15c33885$var$shuffleButton, $197cd56b15c33885$var$game.shuffleCount, 2);\n    updateSlots($197cd56b15c33885$var$removeButton, $197cd56b15c33885$var$game.removeCount, 2);\n}\nfunction $197cd56b15c33885$var$render() {\n    var state = $197cd56b15c33885$var$game.getState();\n    // eslint-disable-next-line no-shadow\n    var status = $197cd56b15c33885$var$game.getStatus();\n    var cells = $197cd56b15c33885$var$boardElement.querySelectorAll(\".field-cell\");\n    cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = state[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell\";\n        if (value > 0) cell.classList.add(\"field-cell--\".concat(value));\n    });\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n    switch(status){\n        case \"win\":\n            $197cd56b15c33885$var$statusElement.textContent = \"You win!\";\n            $197cd56b15c33885$var$statusElement.classList.remove(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$statusElement.textContent = \"You lose! Restart the game?\";\n            $197cd56b15c33885$var$statusElement.classList.remove(\"hidden\");\n            break;\n        default:\n            $197cd56b15c33885$var$statusElement.classList.add(\"hidden\");\n    }\n    $197cd56b15c33885$var$updateToolButtons();\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var keyActions = {\n        ArrowLeft: function() {\n            return $197cd56b15c33885$var$game.moveLeft();\n        },\n        ArrowRight: function() {\n            return $197cd56b15c33885$var$game.moveRight();\n        },\n        ArrowUp: function() {\n            return $197cd56b15c33885$var$game.moveUp();\n        },\n        ArrowDown: function() {\n            return $197cd56b15c33885$var$game.moveDown();\n        }\n    };\n    var action = keyActions[e.key];\n    if (action) {\n        action();\n        $197cd56b15c33885$var$render();\n    }\n});\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    var isIdle = $197cd56b15c33885$var$game.getStatus() === \"idle\";\n    if (isIdle) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$toolsContainer.classList.remove(\"hidden\");\n    } else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$render();\n});\n$197cd56b15c33885$var$undoButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.undo();\n    $197cd56b15c33885$var$render();\n});\n$197cd56b15c33885$var$shuffleButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.shuffle();\n    $197cd56b15c33885$var$render();\n});\n$197cd56b15c33885$var$removeButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.remove();\n    $197cd56b15c33885$var$render();\n});\n$197cd56b15c33885$var$render();\n\n})();\n//# sourceMappingURL=index.3805a78b.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst boardElement = document.querySelector('.game-field');\nconst scoreElement = document.querySelector('.game-score');\nconst statusElement = document.querySelector('.message-lose');\nconst startButton = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst toolsContainer = document.querySelector('.game-tools');\nconst undoButton = document.querySelector('.undo-button');\nconst shuffleButton = document.querySelector('.shuffle-button');\nconst removeButton = document.querySelector('.remove-button');\n\nfunction updateToolButtons() {\n  const updateSlots = (button, count, max) => {\n    const slots = Array.from(button.querySelectorAll('.use-slot'));\n\n    slots.forEach((slot, index) => {\n      slot.classList.toggle('used', index < count);\n    });\n\n    button.disabled = count === 0;\n  };\n\n  updateSlots(undoButton, game.undoCount, 2);\n  updateSlots(shuffleButton, game.shuffleCount, 2);\n  updateSlots(removeButton, game.removeCount, 2);\n}\n\nfunction render() {\n  const state = game.getState();\n  // eslint-disable-next-line no-shadow\n  const status = game.getStatus();\n  const cells = boardElement.querySelectorAll('.field-cell');\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = state[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = 'field-cell';\n\n    if (value > 0) {\n      cell.classList.add(`field-cell--${value}`);\n    }\n  });\n\n  scoreElement.textContent = game.getScore();\n\n  switch (status) {\n    case 'win':\n      statusElement.textContent = 'You win!';\n      statusElement.classList.remove('hidden');\n      break;\n    case 'lose':\n      statusElement.textContent = 'You lose! Restart the game?';\n      statusElement.classList.remove('hidden');\n      break;\n    default:\n      statusElement.classList.add('hidden');\n  }\n\n  updateToolButtons();\n}\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const keyActions = {\n    ArrowLeft: () => game.moveLeft(),\n    ArrowRight: () => game.moveRight(),\n    ArrowUp: () => game.moveUp(),\n    ArrowDown: () => game.moveDown(),\n  };\n\n  const action = keyActions[e.key];\n\n  if (action) {\n    action();\n    render();\n  }\n});\n\nstartButton.addEventListener('click', () => {\n  const isIdle = game.getStatus() === 'idle';\n\n  if (isIdle) {\n    game.start();\n    messageStart.classList.add('hidden');\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    toolsContainer.classList.remove('hidden');\n  } else {\n    game.restart();\n  }\n\n  render();\n});\n\nundoButton.addEventListener('click', () => {\n  game.undo();\n  render();\n});\n\nshuffleButton.addEventListener('click', () => {\n  game.shuffle();\n  render();\n});\n\nremoveButton.addEventListener('click', () => {\n  game.remove();\n  render();\n});\n\nrender();\n","/* eslint-disable no-shadow */\n'use strict';\n\nclass Game {\n  constructor(initialState) {\n    this.size = 4;\n    this.board = initialState || this.createEmptyBoard();\n    this.score = 0;\n    this.history = [];\n    this.scoreHistory = [];\n\n    this.undoCount = 2;\n    this.shuffleCount = 1;\n    this.removeCount = 0;\n\n    this.has256 = false;\n    this.has512 = false;\n\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    this.savePreviousState();\n\n    let moved = false;\n\n    for (let i = 0; i < this.size; i++) {\n      const row = this.board[i].filter((val) => val !== 0);\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          row[j] *= 2;\n          this.score += row[j];\n          row[j + 1] = 0;\n          this.checkWin(row[j]);\n          this.checkUnlocks(row[j]);\n        }\n      }\n\n      const newRow = row.filter((val) => val !== 0);\n\n      while (newRow.length < this.size) {\n        newRow.push(0);\n      }\n\n      if (this.board[i].toString() !== newRow.toString()) {\n        moved = true;\n      }\n\n      this.board[i] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n\n      if (this.isGameOver()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  moveRight() {\n    this.board = this.reverseRows(this.board);\n    this.moveLeft();\n\n    if (this.status === 'win') {\n      return;\n    }\n    this.board = this.reverseRows(this.board);\n  }\n\n  moveUp() {\n    this.board = this.transpose(this.board);\n    this.moveLeft();\n\n    if (this.status === 'win') {\n      return;\n    }\n    this.board = this.transpose(this.board);\n  }\n\n  moveDown() {\n    this.board = this.transpose(this.board);\n    this.board = this.reverseRows(this.board);\n    this.moveLeft();\n\n    if (this.status === 'win') {\n      return;\n    }\n    this.board = this.reverseRows(this.board);\n    this.board = this.transpose(this.board);\n  }\n\n  start() {\n    if (this.status !== 'playing') {\n      this.board = this.createEmptyBoard();\n      this.addRandomTile();\n      this.addRandomTile();\n      this.score = 0;\n      this.status = 'playing';\n      this.undoCount = 2;\n      this.shuffleCount = 1;\n      this.removeCount = 0;\n      this.has256 = false;\n      this.has512 = false;\n    }\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.start();\n  }\n\n  savePreviousState() {\n    this.history.push(this.board.map((row) => [...row]));\n    this.scoreHistory.push(this.score);\n\n    if (this.history.length > 2) {\n      this.history.shift();\n      this.scoreHistory.shift();\n    }\n  }\n\n  undo() {\n    if (this.undoCount > 0 && this.history.length > 0) {\n      this.board = this.history.pop();\n      this.score = this.scoreHistory.pop();\n      this.undoCount--;\n    }\n  }\n\n  shuffle() {\n    if (this.shuffleCount === 0) {\n      return;\n    }\n\n    const flat = this.board.flat().filter((v) => v !== 0);\n\n    for (let i = flat.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n\n      [flat[i], flat[j]] = [flat[j], flat[i]];\n    }\n\n    const newBoard = this.createEmptyBoard();\n\n    flat.forEach((val, i) => {\n      const row = Math.floor(i / this.size);\n      const col = i % this.size;\n\n      newBoard[row][col] = val;\n    });\n\n    this.board = newBoard;\n    this.shuffleCount--;\n  }\n\n  remove() {\n    if (this.removeCount === 0) {\n      return;\n    }\n\n    const filled = [];\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] !== 0) {\n          filled.push([i, j]);\n        }\n      }\n    }\n\n    if (filled.length === 0) {\n      return;\n    }\n\n    const [i, j] = filled[Math.floor(Math.random() * filled.length)];\n\n    this.board[i][j] = 0;\n    this.removeCount--;\n  }\n\n  checkWin(value) {\n    if (value === 2048) {\n      this.status = 'win';\n    }\n  }\n\n  checkUnlocks(value) {\n    if (value === 256 && !this.has256) {\n      this.shuffleCount++;\n      this.has256 = true;\n    }\n\n    if (value === 512 && this.removeCount < 2) {\n      this.removeCount++;\n      this.has512 = true;\n    }\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  addRandomTile() {\n    const empty = [];\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          empty.push([i, j]);\n        }\n      }\n    }\n\n    if (empty.length > 0) {\n      const [i, j] = empty[Math.floor(Math.random() * empty.length)];\n\n      this.board[i][j] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  isGameOver() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          return false;\n        }\n\n        if (j < this.size - 1 && this.board[i][j] === this.board[i][j + 1]) {\n          return false;\n        }\n\n        if (i < this.size - 1 && this.board[i][j] === this.board[i + 1][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  reverseRows(matrix) {\n    return matrix.map((row) => [...row].reverse());\n  }\n\n  transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$efec029548ccee7f$export$71511d61b312f219","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","TypeError","$227c6742e0ff6f82$export$71511d61b312f219","iter","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","size","board","createEmptyBoard","score","history","scoreHistory","undoCount","shuffleCount","removeCount","has256","has512","status","key","_this","savePreviousState","moved","_loop","row","filter","val","j","checkWin","checkUnlocks","newRow","addRandomTile","isGameOver","reverseRows","moveLeft","transpose","start","map","shift","pop","flat","v","ref","Math","floor","random","newBoard","forEach","col","filled","_filled_Math_floor","i1","j1","fill","empty","_empty_Math_floor","matrix","reverse","_","colIndex","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$boardElement","document","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$statusElement","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$toolsContainer","$197cd56b15c33885$var$undoButton","$197cd56b15c33885$var$shuffleButton","$197cd56b15c33885$var$removeButton","$197cd56b15c33885$var$render","updateSlots","state","getState","getStatus","cells","querySelectorAll","cell","index","textContent","className","classList","add","concat","getScore","remove","button","count","max","slots","slot","toggle","disabled","addEventListener","e","action","keyActions","ArrowLeft","ArrowRight","moveRight","ArrowUp","moveUp","ArrowDown","moveDown","restart","undo","shuffle"],"version":3,"file":"index.3805a78b.js.map"}